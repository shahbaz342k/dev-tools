<!DOCTYPE html>
<html lang="en">

<head>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css">
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&display=swap">
  <link rel="stylesheet" href="assets/style.css">
  <title>File Upload with Progress Bar</title>
  <style>
    body {
      display: flex;
      justify-content: center;
      align-items: center;
      background: linear-gradient(to right, #3494E6, #34abdb29);
      height: 100vh;
      margin: 0;
      font-family: 'Montserrat', sans-serif;
      background-color: #f4f4f4;
    }

    .card {
      text-align: center;
      padding: 20px;
      border: 2px solid #1a9dd1;
      border-radius: 10px;
      max-width: 500px;
      width: 100%;
      background-color: #fff;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .app-title {
      color: #49c1f1;
    }

    .app-subtitle {
      color: #333;
    }

    .file-label {
      cursor: pointer;
      display: flexbox;
      padding: 7px;
      background-color: #3494e6;
      color: #fff;
      border-radius: 8px;
      margin-bottom: 60px;
      transition: background-color 0.3s;
    }

    .file-label:hover {
      background-color: #89b8dfde;
    }

    .file-input {
      display: none;
    }

    .progress-container {
      margin-top: 15px;
      position: relative;
      height: 20px;
    }

    .progress-bar {
      width: 0;
      height: 100%;
      background-color: #49c1f1;
      border-radius: 5px;
      transition: width 0.3s;
    }

    .progress-text {
      position: absolute;
      top: 0;
      left: 50%;
      transform: translateX(-50%);
      color: #333;
      font-size: 14px;
      display: none;
    }

    .file-details {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-top: 15px;
    }

    .file-name {
      color: #031c27;
      font-weight: bold;
    }

    .clear-button {
      padding: 5px 12px;
      background-color: #e74c3c;
      color: #fff;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: background-color 0.3s;
      display: none;
    }

    .clear-button:hover {
      background-color: #c0392b;
    }

    .preview-container img {
      max-width: 100%;
      max-height: 150px;
      cursor: pointer;
      margin-top: 15px;
    }

    .modal {
      display: none;
      position: fixed;
      z-index: 1;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgba(0, 0, 0, 0.9);
    }

    .modal-content {
      margin: auto;
      display: block;
      max-width: 80%;
      max-height: 80%;
    }

    .close {
      color: #fff;
      font-size: 35px;
      font-weight: bold;
      position: absolute;
      top: 15px;
      right: 25px;
      cursor: pointer;
    }

    .error {
      color: #e74c3c;
    }

    button#submit {
      border-radius: 5px;
      width: 150px;
      height: 35px;
      cursor: pointer;
      border: none;
      outline: none;
      background: #3494e6;
      color: #fff;
      font-weight: bold;
      font-size: 18px;
    }

    button#submit:hover {
      background: #89b8dfde;
    }

    .btn-download {
      background: #1e73bb;
      padding: 10px 30px;
      border: none;
      border-radius: 5px;
      color: #fff;
      text-decoration: none;
      font-weight: bold;
      margin-bottom: 10px;
      display: block;
      font-size: 24px;
      text-transform: uppercase;
    }

    .btn-download:hover {
      background: #89b8dfde;
    }

    .btn-download-text {
      font-size: 24px;
      padding: 10px 15px;
      color: #49c1f1;
    }

    .btn-redirect {
      color: #1e73bb;
      font-weight: 600;
    }
  </style>
</head>

<body>
  <div class="card">
    <h1 class="app-title">
      <i class="fas fa-file-upload"></i>
      Dev Tools
    </h1>
    <% if(success){ %>
      <h4 class="btn-download-text">Your file is ready for download</h1>
        <a href="download/<%= downloadFile %>" class="btn-download">Download</a>
        <a href="/" class="btn-redirect">Click here to continue..</a>
        <% }else{ %>
          <h3 class="app-subtitle">
            Convert Doc to PDF
          </h3>
          <form action="/savefile" method="post" enctype="multipart/form-data">
            <label for="fileInput" class="file-label">
              <i class="fas fa-cloud-upload-alt"></i>
              Choose a file
            </label>
            <input type="file" id="fileInput" name="file" class="file-input" />
            <div class="progress-container">
              <div class="progress-bar" id="progressBar"></div>
              <div class="progress-text" id="progressText"></div>
            </div>
            <div class="file-details">
              <div class="file-name" id="fileName"></div>
              <button class="clear-button" id="clearButton">
                <i class="fas fa-times"></i>
                Clear
              </button>
            </div>
            <button type="submit" name="submit" id="submit">Convert to PDF</button>
          </form>


          <div class="preview-container" id="previewContainer"></div>
          <div class="error" id="error"></div>

  </div>
  <div class="modal" id="myModal">
    <span class="close" id="closeModal">&times;</span>
    <img class="modal-content" id="uploadedImageModal">
  </div>
  <% } %>

    <script>
      // script.js

      document.addEventListener('DOMContentLoaded', () => {
        const fInput = document.getElementById('fileInput');
        const pBar = document.getElementById('progressBar');
        const pText = document.getElementById('progressText');
        const fName = document.getElementById('fileName');
        const modal = document.getElementById('myModal');
        const cModal = document.getElementById('closeModal');
        const uImage = document.getElementById('uploadedImageModal');
        const pContainer = document.getElementById('previewContainer');
        const cBtn = document.getElementById('clearButton');
        const error = document.getElementById('error');
        const submitBtn = document.getElementById('submit');
        submitBtn.style.display = 'none';

        fInput.addEventListener('change', (event) => {
          const file = event.target.files[0];
          error.textContent = '';
          console.log('file: ' + file.type)
          submitBtn.style.display = 'none';

          if (file && file.type.startsWith('application/')) {
            // Check if file size exceeds 1MB
            if (file.size > 1048576 * 20) { // 1MB in bytes
              error.textContent += `${file.name} is too big! Maximum file size is 20MB.`;
              fInput.value = '';
            } else {
              const reader = new FileReader();
              reader.onloadstart = () => {
                pBar.style.width = '0%';
                pText.style.display = 'block';
                pText.innerText = '0%';
                pContainer.style.display = 'none';
                cBtn.style.display = 'none';
              };
              reader.onprogress = (event) => {
                if (event.lengthComputable) {
                  const progress =
                    (event.loaded / event.total) * 100;
                  pBar.style.width = `${progress}%`;
                  pText.innerText = `${Math.round(progress)}%`;
                }
              };
              reader.onload = () => {
                const uploadTime = 4000;
                const interval = 50;
                const steps = uploadTime / interval;
                let currentStep = 0;
                const updateProgress = () => {
                  const progress = (currentStep / steps) * 100;
                  pBar.style.width = `${progress}%`;
                  pText.innerText = `${Math.round(progress)}%`;
                  currentStep++;

                  if (currentStep <= steps) {
                    setTimeout(updateProgress, interval);
                  } else {
                    pBar.style.width = '100%';
                    pText.innerText = '100%';
                    fName.innerText = `File Name: ${file.name}`;
                    // pContainer.innerHTML = `<img src="${reader.result}" alt="Preview" id="previewImage">`;
                    pContainer.style.display = 'block';
                    cBtn.style.display = 'block';
                    submitBtn.style.display = 'block';

                  }
                };
                setTimeout(updateProgress, interval);
              };
              reader.readAsDataURL(file);
            }
          } else {
            error.textContent = 'Please select a valid file'
            fInput.value = '';
          }
        });
        pContainer.addEventListener('click', () => {
          modal.style.display = 'block';
          uImage.src = document.getElementById('previewImage').src;
        });
        cModal.addEventListener('click', () => {
          modal.style.display = 'none';
        });
        cBtn.addEventListener('click', () => {
          fInput.value = '';
          pBar.style.width = '0%';
          pText.style.display = 'none';
          fName.innerText = '';
          pContainer.style.display = 'none';
          cBtn.style.display = 'none';
          submitBtn.style.display = 'none';

        });
        window.addEventListener('click', (event) => {
          if (event.target === modal) {
            modal.style.display = 'none';
          }
        });

        submitBtn.addEventListener('click', (event) => {
          submitBtn.textContent = "Please wait...";
          // submitBtn.textContent = "Please wait...";
        });

      });
    </script>
</body>

</html>